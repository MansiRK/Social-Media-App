{"ast":null,"code":"import { NOTIFY_TYPES } from '../actions/notifyAction';\nimport { EditData } from '../actions/globalTypes';\nconst initialState = {\n  loading: false,\n  data: [],\n  sound: false\n};\nconst notifyReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NOTIFY_TYPES.GET_NOTIFIES:\n      return {\n        ...state,\n        data: action.payload\n      };\n    case NOTIFY_TYPES.CREATE_NOTIFY:\n      return {\n        ...state,\n        data: [action.payload, ...state.data]\n      };\n    case NOTIFY_TYPES.REMOVE_NOTIFY:\n      return {\n        ...state,\n        data: state.data.filter(item => item.id !== action.payload.id || item.url !== action.payload.url)\n      };\n    case NOTIFY_TYPES.UPDATE_NOTIFY:\n      return {\n        ...state,\n        data: EditData(state.data, action.payload._id, action.payload)\n      };\n    case NOTIFY_TYPES.UPDATE_SOUND:\n      return {\n        ...state,\n        sound: action.payload\n      };\n    case NOTIFY_TYPES.DELETE_ALL_NOTIFIES:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default notifyReducer;","map":{"version":3,"names":["NOTIFY_TYPES","EditData","initialState","loading","data","sound","notifyReducer","state","action","type","GET_NOTIFIES","payload","CREATE_NOTIFY","REMOVE_NOTIFY","filter","item","id","url","UPDATE_NOTIFY","_id","UPDATE_SOUND","DELETE_ALL_NOTIFIES"],"sources":["C:/Mitali/project/client/src/redux/reducers/notifyReducer.js"],"sourcesContent":["import { NOTIFY_TYPES } from '../actions/notifyAction'\nimport { EditData } from '../actions/globalTypes'\n\nconst initialState = {\n    loading: false,\n    data: [],\n    sound: false\n}\n\nconst notifyReducer = (state = initialState, action) => {\n    switch (action.type){\n        case NOTIFY_TYPES.GET_NOTIFIES:\n            return {\n                ...state,\n                data: action.payload\n            };\n        case NOTIFY_TYPES.CREATE_NOTIFY:\n            return {\n                ...state,\n                data: [action.payload, ...state.data]\n            };\n        case NOTIFY_TYPES.REMOVE_NOTIFY:\n            return {\n                ...state,\n                data: state.data.filter(item => (\n                    item.id !== action.payload.id || item.url !== action.payload.url\n                ))\n            };\n        case NOTIFY_TYPES.UPDATE_NOTIFY:\n            return {\n                ...state,\n                data: EditData(state.data, action.payload._id, action.payload)\n            };\n        case NOTIFY_TYPES.UPDATE_SOUND:\n            return {\n                ...state,\n                sound: action.payload\n            };\n        case NOTIFY_TYPES.DELETE_ALL_NOTIFIES:\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\n\nexport default notifyReducer"],"mappings":"AAAA,SAASA,YAAY,QAAQ,yBAAyB;AACtD,SAASC,QAAQ,QAAQ,wBAAwB;AAEjD,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,aAAa,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKT,YAAY,CAACU,YAAY;MAC1B,OAAO;QACH,GAAGH,KAAK;QACRH,IAAI,EAAEI,MAAM,CAACG;MACjB,CAAC;IACL,KAAKX,YAAY,CAACY,aAAa;MAC3B,OAAO;QACH,GAAGL,KAAK;QACRH,IAAI,EAAE,CAACI,MAAM,CAACG,OAAO,EAAE,GAAGJ,KAAK,CAACH,IAAI;MACxC,CAAC;IACL,KAAKJ,YAAY,CAACa,aAAa;MAC3B,OAAO;QACH,GAAGN,KAAK;QACRH,IAAI,EAAEG,KAAK,CAACH,IAAI,CAACU,MAAM,CAACC,IAAI,IACxBA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACG,OAAO,CAACK,EAAE,IAAID,IAAI,CAACE,GAAG,KAAKT,MAAM,CAACG,OAAO,CAACM,GAChE;MACL,CAAC;IACL,KAAKjB,YAAY,CAACkB,aAAa;MAC3B,OAAO;QACH,GAAGX,KAAK;QACRH,IAAI,EAAEH,QAAQ,CAACM,KAAK,CAACH,IAAI,EAAEI,MAAM,CAACG,OAAO,CAACQ,GAAG,EAAEX,MAAM,CAACG,OAAO;MACjE,CAAC;IACL,KAAKX,YAAY,CAACoB,YAAY;MAC1B,OAAO;QACH,GAAGb,KAAK;QACRF,KAAK,EAAEG,MAAM,CAACG;MAClB,CAAC;IACL,KAAKX,YAAY,CAACqB,mBAAmB;MACjC,OAAO;QACH,GAAGd,KAAK;QACRH,IAAI,EAAEI,MAAM,CAACG;MACjB,CAAC;IACL;MACI,OAAOJ,KAAK;EACpB;AACJ,CAAC;AAGD,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}