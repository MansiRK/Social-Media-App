{"ast":null,"code":"export const checkImage = file => {\n  let err = \"\";\n  if (!file) return err = \"File does not exist.\";\n  if (file.size > 1024 * 1024)\n    // 1mb\n    err = \"The largest image size is 1mb.\";\n  if (file.type !== 'image/jpeg' && file.type !== 'image/png') err = \"Image format is incorrect.\";\n  return err;\n};\nexport const imageUpload = async images => {\n  let imgArr = [];\n  for (const item of images) {\n    const formData = new FormData();\n    if (item.camera) {\n      formData.append(\"file\", item.camera);\n    } else {\n      formData.append(\"file\", item);\n    }\n    formData.append(\"upload_preset\", \"social-media\");\n    formData.append(\"cloud_name\", \"dkn3awxd6\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/dkn3awxd6/image/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    imgArr.push({\n      public_id: data.public_id,\n      url: data.secure_url\n    });\n  }\n  return imgArr;\n};","map":{"version":3,"names":["checkImage","file","err","size","type","imageUpload","images","imgArr","item","formData","FormData","camera","append","res","fetch","method","body","data","json","push","public_id","url","secure_url"],"sources":["C:/Mitali/project/client/src/utils/imageUpload.js"],"sourcesContent":["export const checkImage = (file) => {\n    let err = \"\"\n    if(!file) return err = \"File does not exist.\"\n\n    if(file.size > 1024 * 1024) // 1mb\n    err = \"The largest image size is 1mb.\"\n\n    if(file.type !== 'image/jpeg' && file.type !== 'image/png' )\n    err = \"Image format is incorrect.\"\n    \n    return err;\n}\n\n\nexport const imageUpload = async (images) => {\n    let imgArr = [];\n    for(const item of images){\n        const formData = new FormData()\n\n        if(item.camera){\n            formData.append(\"file\", item.camera)\n        }else{\n            formData.append(\"file\", item)\n        }\n        \n        formData.append(\"upload_preset\", \"social-media\")\n        formData.append(\"cloud_name\", \"dkn3awxd6\")\n\n\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/dkn3awxd6/image/upload\",{\n            method: \"POST\",\n            body: formData\n        })\n        \n        const data = await res.json()\n        imgArr.push({public_id: data.public_id, url: data.secure_url})\n    }\n    return imgArr;\n}"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAI,IAAK;EAChC,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAG,CAACD,IAAI,EAAE,OAAOC,GAAG,GAAG,sBAAsB;EAE7C,IAAGD,IAAI,CAACE,IAAI,GAAG,IAAI,GAAG,IAAI;IAAE;IAC5BD,GAAG,GAAG,gCAAgC;EAEtC,IAAGD,IAAI,CAACG,IAAI,KAAK,YAAY,IAAIH,IAAI,CAACG,IAAI,KAAK,WAAW,EAC1DF,GAAG,GAAG,4BAA4B;EAElC,OAAOA,GAAG;AACd,CAAC;AAGD,OAAO,MAAMG,WAAW,GAAG,MAAOC,MAAM,IAAK;EACzC,IAAIC,MAAM,GAAG,EAAE;EACf,KAAI,MAAMC,IAAI,IAAIF,MAAM,EAAC;IACrB,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAE/B,IAAGF,IAAI,CAACG,MAAM,EAAC;MACXF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAACG,MAAM,CAAC;IACxC,CAAC,MAAI;MACDF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IACjC;IAEAC,QAAQ,CAACG,MAAM,CAAC,eAAe,EAAE,cAAc,CAAC;IAChDH,QAAQ,CAACG,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC;IAG1C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAC;MAC7EC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACV,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC7BX,MAAM,CAACY,IAAI,CAAC;MAACC,SAAS,EAAEH,IAAI,CAACG,SAAS;MAAEC,GAAG,EAAEJ,IAAI,CAACK;IAAU,CAAC,CAAC;EAClE;EACA,OAAOf,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}